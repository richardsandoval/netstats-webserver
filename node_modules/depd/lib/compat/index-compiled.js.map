{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;;AAUA,YAAY,CAAC,MAAM,CAAC,OAAO,EAAE,cAAc,EAAE,SAAS,YAAY,GAAG;AACnE,SAAO,MAAM,CAAC,MAAM,IAAI,OAAO,CAAC,iBAAiB,CAAC,CAAA;CACnD,CAAC,CAAA;;AAEF,YAAY,CAAC,MAAM,CAAC,OAAO,EAAE,kBAAkB,EAAE,SAAS,gBAAgB,GAAG;AAC3E,MAAI,KAAK,GAAG,KAAK,CAAC,eAAe,CAAA;AACjC,MAAI,GAAG,GAAG,EAAE,CAAA;AACZ,MAAI,IAAI,GAAG,KAAK,CAAC,iBAAiB,CAAA;;AAElC,WAAS,uBAAuB,CAAC,GAAG,EAAE,KAAK,EAAE;AAC3C,WAAO,KAAK,CAAA;GACb;;AAED,OAAK,CAAC,iBAAiB,GAAG,uBAAuB,CAAA;AACjD,OAAK,CAAC,eAAe,GAAG,CAAC,CAAA;;;AAGzB,OAAK,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAA;;;AAG5B,MAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,CAAA;;AAE7B,OAAK,CAAC,iBAAiB,GAAG,IAAI,CAAA;AAC9B,OAAK,CAAC,eAAe,GAAG,KAAK,CAAA;;AAE7B,SAAO,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,QAAQ,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAA;CACrE,CAAC,CAAA;;;;;;AAMF,SAAS,YAAY,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE;AACvC,WAAS,GAAG,GAAG;AACb,QAAI,GAAG,GAAG,MAAM,EAAE,CAAA;;AAElB,UAAM,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE;AAC/B,kBAAY,EAAE,IAAI;AAClB,gBAAU,EAAE,IAAI;AAChB,WAAK,EAAE,GAAG;KACX,CAAC,CAAA;;AAEF,WAAO,GAAG,CAAA;GACX;;AAED,QAAM,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE;AAC/B,gBAAY,EAAE,IAAI;AAClB,cAAU,EAAE,IAAI;AAChB,OAAG,EAAE,GAAG;GACT,CAAC,CAAA;CACH;;;;;;AAMD,SAAS,QAAQ,CAAC,GAAG,EAAE;AACrB,SAAO,GAAG,CAAC,QAAQ,EAAE,CAAA;CACtB","file":"index-compiled.js","sourcesContent":["/*!\n * depd\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nlazyProperty(module.exports, 'bufferConcat', function bufferConcat() {\n  return Buffer.concat || require('./buffer-concat')\n})\n\nlazyProperty(module.exports, 'callSiteToString', function callSiteToString() {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  function prepareObjectStackTrace(obj, stack) {\n    return stack\n  }\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = 2\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice the stack\n  var stack = obj.stack.slice()\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack[0].toString ? toString : require('./callsite-tostring')\n})\n\n/**\n * Define a lazy property.\n */\n\nfunction lazyProperty(obj, prop, getter) {\n  function get() {\n    var val = getter()\n\n    Object.defineProperty(obj, prop, {\n      configurable: true,\n      enumerable: true,\n      value: val\n    })\n\n    return val\n  }\n\n  Object.defineProperty(obj, prop, {\n    configurable: true,\n    enumerable: true,\n    get: get\n  })\n}\n\n/**\n * Call toString() on the obj\n */\n\nfunction toString(obj) {\n  return obj.toString()\n}\n"]}