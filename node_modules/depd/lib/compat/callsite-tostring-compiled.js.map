{"version":3,"sources":["callsite-tostring.js"],"names":[],"mappings":"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","file":"callsite-tostring-compiled.js","sourcesContent":["/*!\n * depd\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = callSiteToString\n\n/**\n * Format a CallSite file location to a string.\n */\n\nfunction callSiteFileLocation(callSite) {\n  var fileName\n  var fileLocation = ''\n\n  if (callSite.isNative()) {\n    fileLocation = 'native'\n  } else if (callSite.isEval()) {\n    fileName = callSite.getScriptNameOrSourceURL()\n    if (!fileName) {\n      fileLocation = callSite.getEvalOrigin()\n    }\n  } else {\n    fileName = callSite.getFileName()\n  }\n\n  if (fileName) {\n    fileLocation += fileName\n\n    var lineNumber = callSite.getLineNumber()\n    if (lineNumber != null) {\n      fileLocation += ':' + lineNumber\n\n      var columnNumber = callSite.getColumnNumber()\n      if (columnNumber) {\n        fileLocation += ':' + columnNumber\n      }\n    }\n  }\n\n  return fileLocation || 'unknown source'\n}\n\n/**\n * Format a CallSite to a string.\n */\n\nfunction callSiteToString(callSite) {\n  var addSuffix = true\n  var fileLocation = callSiteFileLocation(callSite)\n  var functionName = callSite.getFunctionName()\n  var isConstructor = callSite.isConstructor()\n  var isMethodCall = !(callSite.isToplevel() || isConstructor)\n  var line = ''\n\n  if (isMethodCall) {\n    var methodName = callSite.getMethodName()\n    var typeName = getConstructorName(callSite)\n\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) !== 0) {\n        line += typeName + '.'\n      }\n\n      line += functionName\n\n      if (methodName && functionName.lastIndexOf('.' + methodName) !== functionName.length - methodName.length - 1) {\n        line += ' [as ' + methodName + ']'\n      }\n    } else {\n      line += typeName + '.' + (methodName || '<anonymous>')\n    }\n  } else if (isConstructor) {\n    line += 'new ' + (functionName || '<anonymous>')\n  } else if (functionName) {\n    line += functionName\n  } else {\n    addSuffix = false\n    line += fileLocation\n  }\n\n  if (addSuffix) {\n    line += ' (' + fileLocation + ')'\n  }\n\n  return line\n}\n\n/**\n * Get constructor name of reviver.\n */\n\nfunction getConstructorName(obj) {\n  var receiver = obj.receiver\n  return (receiver.constructor && receiver.constructor.name) || null\n}\n"]}