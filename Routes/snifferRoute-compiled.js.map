{"version":3,"sources":["snifferRoute.js"],"names":[],"mappings":";;;;;;AAIA,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;AAEjC,IAAI,MAAM,GAAG,SAAT,MAAM,CAAa,OAAO,EAAE;AAC5B,QAAI,aAAa,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;;AAErC,iBAAa,CAAC,KAAK,CAAC,EAAE,CAAC,CAClB,GAAG,CAAC,UAAU,GAAG,EAAE,GAAG,EAAE;AACrB,YAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;;AAEtB,eAAO,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,GAAG,EAAE,OAAO,EAAE;AACxC,gBAAI,GAAG,EACH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAE1B,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACzB,CAAC,CAAC;KACN,CAAC,CAAC;;AAEP,iBAAa,CAAC,KAAK,CAAC,MAAM,CAAC,CACtB,GAAG,CAAC,UAAU,GAAG,EAAE,GAAG,EAAE;;AAErB,eAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,GAAG,EAAE,OAAO,EAAE;AACpD,gBAAI,GAAG,EACH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAE1B,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACzB,CAAC,CAAC;KAEN,CAAC,CAAC;;;AAGP,iBAAa,CAAC,KAAK,CAAC,iCAAiC,CAAC,CACjD,GAAG,CAAC,UAAU,GAAG,EAAE,GAAG,EAAE;;AAErB,YAAI,KAAK,GAAI,GAAG,CAAC,MAAM,CAAC,KAAK,AAAC,CAAC;AAC/B,YAAI,IAAI,GAAI,GAAG,CAAC,MAAM,CAAC,IAAI,AAAC,CAAC;;AAE7B,eAAO,CAAC,GAAG,aAAW,KAAK,cAAS,IAAI,CAAG,CAAC;;AAE5C,YAAI,IAAI,GAAG,EAAE,CAAC;;AAEd,YAAI,CAAC,IAAI,GAAG;AACR,eAAG,EAAE,IAAI;AACT,gBAAI,EAAE,KAAK;SACd,CAAC;;AAEF,eAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;AAElB,eAAO,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,GAAG,EAAE,OAAO,EAAE;AACvC,gBAAI,GAAG,EACH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAE1B,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACzB,CAAC,CAAC;KACN,CAAC,CAAC;;;;;;;;;;;;;;;AAeP,WAAO,aAAa,CAAC;CACxB,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"snifferRoute-compiled.js","sourcesContent":["/**\n * Created by rsandoval on 22/10/15.\n */\n\nvar express = require('express');\n\nvar routes = function (Sniffer) {\n    var snifferRouter = express.Router();\n\n    snifferRouter.route('')\n        .get(function (req, res) {\n            var query = req.query;\n\n            Sniffer.find(query, function (err, sniffer) {\n                if (err)\n                    res.status(500).send(err);\n                else\n                    res.json(sniffer);\n            });\n        });\n\n    snifferRouter.route('/:id')\n        .get(function (req, res) {\n\n            Sniffer.findById(req.params.id, function (err, sniffer) {\n                if (err)\n                    res.status(500).send(err);\n                else\n                    res.json(sniffer);\n            });\n\n        });\n\n    //TODO\n    snifferRouter.route('/byDate/start=:start&ends=:ends')\n        .get(function (req, res) {\n\n            var start = (req.params.start);\n            var ends = (req.params.ends);\n\n            console.log(`start: ${start} ends ${ends}`);\n\n            var date = {};\n\n            date.date = {\n                $lt: ends,\n                $gte: start\n            };\n\n            console.log(date);\n\n            Sniffer.find(date, function (err, sniffer) {\n                if (err)\n                    res.status(500).send(err);\n                else\n                    res.json(sniffer);\n            });\n        });\n\n    //snifferRouter.route('/filter/isTCP')\n    //    .get(function (req, res) {\n    //        var response ;\n    //        var count = 2;//Sniffer.find({isTCP: false}).count();\n    //        var total = 5;//Sniffer.find({}).count();\n    //        response = {\n    //            upd : count,\n    //            tcp : (total - count),\n    //            total : total\n    //        };\n    //        res.json(response);\n    //\n    //    });\n    return snifferRouter;\n};\n\nmodule.exports = routes;"]}